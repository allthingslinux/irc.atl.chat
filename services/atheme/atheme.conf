/* Atheme Services Configuration for AllThingsLinux IRC Network
 * Based on the official example configuration
 * Optimized for production use with UnrealIRCd
 */

/****************************************************************************
 * MODULES SECTION                                                          *
 ****************************************************************************/

/* Protocol module - UnrealIRCd 4+ */
loadmodule "protocol/unreal4";

/* Database backend - Flatfile format (required for Atheme 7.2+) */
loadmodule "backend/flatfile";

/* Password hashing modules */
loadmodule "crypto/pbkdf2v2";
loadmodule "crypto/pbkdf2";

/* Database configuration for flatfile backend */
database {
    name = "flatfile";
    source = "/usr/local/atheme/data";
};

/* Authentication modules */
#loadmodule "auth/ldap";

/* NickServ modules */
loadmodule "nickserv/main";
loadmodule "nickserv/access";
loadmodule "nickserv/badmail";
loadmodule "nickserv/cert";
loadmodule "nickserv/drop";
loadmodule "nickserv/enforce";
loadmodule "nickserv/ghost";
loadmodule "nickserv/group";
loadmodule "nickserv/help";
loadmodule "nickserv/hold";
loadmodule "nickserv/identify";
loadmodule "nickserv/info";
loadmodule "nickserv/list";
loadmodule "nickserv/listmail";
loadmodule "nickserv/logout";
loadmodule "nickserv/mark";
loadmodule "nickserv/freeze";
loadmodule "nickserv/listchans";
loadmodule "nickserv/listgroups";
loadmodule "nickserv/register";
loadmodule "nickserv/regnolimit";
loadmodule "nickserv/resetpass";
loadmodule "nickserv/restrict";
loadmodule "nickserv/return";
loadmodule "nickserv/setpass";
loadmodule "nickserv/sendpass_user";
loadmodule "nickserv/set_accountname";
loadmodule "nickserv/set_email";
loadmodule "nickserv/set_emailmemos";
loadmodule "nickserv/set_hidemail";
loadmodule "nickserv/set_language";
loadmodule "nickserv/set_nevergroup";
loadmodule "nickserv/set_neverop";
loadmodule "nickserv/set_nogreet";
loadmodule "nickserv/set_nomemo";
loadmodule "nickserv/set_noop";
loadmodule "nickserv/set_password";
loadmodule "nickserv/set_property";
loadmodule "nickserv/set_pubkey";
loadmodule "nickserv/set_quietchg";
loadmodule "nickserv/status";
loadmodule "nickserv/taxonomy";
loadmodule "nickserv/vacation";
loadmodule "nickserv/verify";
loadmodule "nickserv/vhost";

/* ChanServ modules */
loadmodule "chanserv/main";
loadmodule "chanserv/access";
loadmodule "chanserv/akick";
loadmodule "chanserv/ban";
loadmodule "chanserv/bansearch";
loadmodule "chanserv/clone";
loadmodule "chanserv/close";
loadmodule "chanserv/clear";
loadmodule "chanserv/clear_akicks";
loadmodule "chanserv/clear_bans";
loadmodule "chanserv/clear_flags";
loadmodule "chanserv/clear_users";
loadmodule "chanserv/count";
loadmodule "chanserv/drop";
loadmodule "chanserv/flags";
loadmodule "chanserv/ftransfer";
loadmodule "chanserv/getkey";
loadmodule "chanserv/help";
loadmodule "chanserv/hold";
loadmodule "chanserv/info";
loadmodule "chanserv/invite";
loadmodule "chanserv/kick";
loadmodule "chanserv/list";
loadmodule "chanserv/mark";
loadmodule "chanserv/op";
loadmodule "chanserv/recover";
loadmodule "chanserv/register";
loadmodule "chanserv/set_email";
loadmodule "chanserv/set_entrymsg";
loadmodule "chanserv/set_fantasy";
loadmodule "chanserv/set_guard";
loadmodule "chanserv/set_keeptopic";
loadmodule "chanserv/set_mlock";
loadmodule "chanserv/set_prefix";
loadmodule "chanserv/set_property";
loadmodule "chanserv/set_restricted";
loadmodule "chanserv/set_secure";
loadmodule "chanserv/set_topiclock";
loadmodule "chanserv/set_url";
loadmodule "chanserv/set_verbose";
loadmodule "chanserv/status";
loadmodule "chanserv/sync";
loadmodule "chanserv/taxonomy";
loadmodule "chanserv/template";
loadmodule "chanserv/topic";
loadmodule "chanserv/voice";
loadmodule "chanserv/why";
loadmodule "chanserv/antiflood";

/* OperServ modules */
loadmodule "operserv/akill";
loadmodule "operserv/compare";
loadmodule "operserv/help";
loadmodule "operserv/identify";
loadmodule "operserv/ignore";
loadmodule "operserv/info";
loadmodule "operserv/jupe";
loadmodule "operserv/mode";
loadmodule "operserv/modlist";
loadmodule "operserv/modmanager";
loadmodule "operserv/noop";
loadmodule "operserv/readonly";
loadmodule "operserv/rehash";
loadmodule "operserv/restart";
loadmodule "operserv/rmatch";
loadmodule "operserv/rnc";
loadmodule "operserv/rwatch";
loadmodule "operserv/set";
loadmodule "operserv/sgline";
loadmodule "operserv/shutdown";
loadmodule "operserv/specs";
loadmodule "operserv/sqline";
loadmodule "operserv/update";
loadmodule "operserv/uptime";

/* MemoServ modules */
loadmodule "memoserv/help";
loadmodule "memoserv/send";
loadmodule "memoserv/sendops";
loadmodule "memoserv/sendgroup";
loadmodule "memoserv/list";
loadmodule "memoserv/read";
loadmodule "memoserv/forward";
loadmodule "memoserv/delete";
loadmodule "memoserv/ignore";

/* Global module */
loadmodule "global/main";

/* InfoServ module */
loadmodule "infoserv/main";

/* SASL agent module */
loadmodule "saslserv/authcookie";
loadmodule "saslserv/plain";

/* GroupServ modules */
loadmodule "groupserv/main";
loadmodule "groupserv/acsnolimit";
loadmodule "groupserv/drop";
loadmodule "groupserv/fflags";
loadmodule "groupserv/flags";
loadmodule "groupserv/help";
loadmodule "groupserv/info";
loadmodule "groupserv/join";
loadmodule "groupserv/list";
loadmodule "groupserv/listchans";
loadmodule "groupserv/register";
loadmodule "groupserv/regnolimit";
loadmodule "groupserv/set";
loadmodule "groupserv/set_channel";
loadmodule "groupserv/set_description";
loadmodule "groupserv/set_email";
loadmodule "groupserv/set_groupname";
loadmodule "groupserv/set_joinflags";
loadmodule "groupserv/set_open";
loadmodule "groupserv/set_public";
loadmodule "groupserv/set_url";

/* HostServ modules */
loadmodule "hostserv/help";
loadmodule "hostserv/onoff";
loadmodule "hostserv/offer";
loadmodule "hostserv/request";
loadmodule "hostserv/vhost";
loadmodule "hostserv/vhostnick";
loadmodule "hostserv/group";
loadmodule "hostserv/drop";

/* HelpServ modules */
loadmodule "helpserv/helpme";
loadmodule "helpserv/ticket";
loadmodule "helpserv/services";

/* StatServ module */
loadmodule "statserv/channel";
loadmodule "statserv/netsplit";
loadmodule "statserv/server";

/* Contrib modules (if enabled during build) */
#loadmodule "contrib/backtrace";

/****************************************************************************
 * SERVICES RUNTIME CONFIGURATION SECTION                                   *
 ****************************************************************************/

/* Crypto configuration */
crypto {
    pbkdf2v2_digest = "SHA2-512";
    pbkdf2v2_rounds = 64000;
    pbkdf2v2_saltlen = 32;
};

/* Server information */
serverinfo {
    name = "services.atl.chat";
    desc = "AllThingsLinux IRC Services";
    numeric = "00A";
    recontime = 10;
    netname = "AllThingsLinux IRC Network";
    hidehostsuffix = "users.atl.chat";
    adminname = "AllThingsLinux IRC Administration";
    adminemail = "admin@atl.chat";
    registeremail = "noreply@atl.chat";
    hidden;
    mta = "/usr/sbin/sendmail";
    loglevel = { admin; error; info; network; wallops; };
    maxcertfp = 0;
    maxlogins = 5;
    maxusers = 5;
    mdlimit = 30;
    emaillimit = 10;
    emailtime = 300;
    auth = none;
    casemapping = rfc1459;
};

/* Uplink configuration - will be set by startup script */
uplink "ircd.atl.chat" {
    host = "127.0.0.1";
    port = 6667;
    send_password = "services_password";
    receive_password = "services_password";
};

/* NickServ configuration */
nickserv {
    nick = "NickServ";
    user = "NickServ";
    host = "services.atl.chat";
    real = "Nickname Services";

    aliases {
        "ID" = "IDENTIFY";
        "MYACCESS" = "LISTCHANS";
    };

    access { };

    spam;
    maxnicks = 5;
    expire = 30;
    enforce_expire = 14;
    enforce_delay = 30;
    enforce_prefix = "Guest";
    show_custom_metadata;
    listownmail_canon;
    bad_password_message;
};

/* ChanServ configuration */
chanserv {
    nick = "ChanServ";
    user = "ChanServ";
    host = "services.atl.chat";
    real = "Channel Services";

    aliases { };
    access { };

    maxchans = 5;
    fantasy;
    templates {
        vop = "+AV";
        hop = "+AHehitrv";
        aop = "+AOehiortv";
        sop = "+AOaefhiorstv";
        founder = "+AFORaefhioqrstv";
    };
    trigger = "!";
    expire = 30;
    maxchanacs = 0;
    maxfounders = 4;
    antiflood_enforce_method = quiet;
    show_custom_metadata;
};

/* OperServ configuration */
operserv {
    nick = "OperServ";
    user = "OperServ";
    host = "services.atl.chat";
    real = "Operator Services";

    aliases { };
    access { };
};

/* MemoServ configuration */
memoserv {
    nick = "MemoServ";
    user = "MemoServ";
    host = "services.atl.chat";
    real = "Memo Services";

    aliases { };
    access { };
    maxmemos = 30;
};

/* Global configuration */
global {
    nick = "Global";
    user = "Global";
    host = "services.atl.chat";
    real = "Network Announcements";

    aliases { };
    access { };
};

/* InfoServ configuration */
infoserv {
    nick = "InfoServ";
    user = "InfoServ";
    host = "services.atl.chat";
    real = "Information Service";

    aliases { };
    access { };
    logoninfo_count = 3;
    logoninfo_reverse;
    logoninfo_show_metadata;
};

/* SASL agent configuration */
saslserv {
    nick = "SaslServ";
    user = "SaslServ";
    host = "services.atl.chat";
    real = "SASL Authentication Agent";
};

/* GroupServ configuration */
groupserv {
    nick = "GroupServ";
    user = "GroupServ";
    host = "services.atl.chat";
    real = "Group Management Services";

    aliases { };
    access { };
    maxgroups = 5;
    maxgroupacs = 100;
    enable_open_groups;
    join_flags = "+";
};

/* HostServ configuration */
hostserv {
    nick = "HostServ";
    user = "HostServ";
    host = "services.atl.chat";
    real = "Host Management Services";

    aliases {
        "APPROVE" = "ACTIVATE";
        "DENY" = "REJECT";
    };
    access { };
};

/* HelpServ configuration */
helpserv {
    nick = "HelpServ";
    user = "HelpServ";
    host = "services.atl.chat";
    real = "Help Services";

    aliases { };
    access { };
};

/* StatServ configuration */
statserv {
    nick = "StatServ";
    user = "StatServ";
    host = "services.atl.chat";
    real = "Statistics Services";

    aliases { };
    access { };
};

/****************************************************************************
 * GENERAL PARAMETERS CONFIGURATION SECTION                                *
 ****************************************************************************/

general {
    helpchan = "#help";
    helpurl = "https://atl.chat/help";
    join_chans;
    leave_chans;
    uflags = { hidemail; };
    cflags = { guard; verbose; };
    flood_msgs = 7;
    flood_time = 10;
    ratelimit_uses = 5;
    ratelimit_period = 60;
    kline_time = 7;
    clone_time = 0;
    commit_interval = 5;
    db_save_blocking;
    default_clone_allowed = 5;
    default_clone_warn = 4;
    clone_identified_increase_limit;
    uplink_sendq_limit = 1048576;
    language = "en";
    allow_taint;
    immune_level = immune;
    show_entity_id;
    load_database_mdeps;
    match_masks_through_vhost;
    default_password_length = 16;
};

/****************************************************************************
 * OPERATOR AND PRIVILEGES CONFIGURATION SECTION                           *
 ****************************************************************************/

/* Operator classes */
operclass "user" { };

operclass "ircop" {
    privs {
        special:ircop;
    };
    privs {
        user:auspex;
        user:admin;
        user:sendpass;
        user:vhost;
        user:mark;
    };
    privs {
        chan:auspex;
        chan:admin;
        chan:cmodes;
        chan:joinstaffonly;
    };
    privs {
        general:auspex;
        general:helper;
        general:viewprivs;
        general:flood;
    };
    privs {
        operserv:omode;
        operserv:akill;
        operserv:jupe;
        operserv:global;
    };
    privs {
        group:auspex;
        group:admin;
    };
};

operclass "sra" {
    extends "ircop";
    privs {
        user:exceedlimits;
        user:hold;
        user:regnolimit;
    };
    privs {
        general:metadata;
        general:admin;
    };
    privs {
        operserv:noop;
        operserv:grant;
    };
    needoper;
};

/* Operators */
operator "admin" {
    operclass = "sra";
};
