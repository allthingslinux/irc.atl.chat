---
name: Security
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  schedule:
    - cron: 20 7 * * 1
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.event_name == 'pull_request' }}
jobs:
  changes:
    name: File Detection
    runs-on: ubuntu-latest
    outputs:
      docker: ${{ steps.docker_changes.outputs.any_changed }}
      shell: ${{ steps.shell_changes.outputs.any_changed }}
      yaml: ${{ steps.yaml_changes.outputs.any_changed }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Check Docker
        uses: tj-actions/changed-files@v46
        id: docker_changes
        with:
          files: |
            **/Containerfile
            **/Dockerfile
            compose.yaml
            docker-compose*.yml
      - name: Check Shell
        uses: tj-actions/changed-files@v46
        id: shell_changes
        with:
          files: |
            **/*.sh
            scripts/**
      - name: Check YAML
        uses: tj-actions/changed-files@v46
        id: yaml_changes
        with:
          files: |
            **/*.yml
            **/*.yaml
            .github/**
  codeql:
    name: CodeQL
    runs-on: ubuntu-latest
    needs: [changes]
    if: (needs.changes.outputs.shell == 'true' || needs.changes.outputs.yaml == 'true' || github.event_name == 'workflow_dispatch')
      && github.event_name != 'pull_request'
    permissions:
      security-events: write
      packages: read
      actions: read
      contents: read
    strategy:
      fail-fast: false
      matrix:
        include:
          - language: actions
            build-mode: none
          - language: yaml
            build-mode: none
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Initialize
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}
          build-mode: ${{ matrix.build-mode }}
      - name: Analyze
        uses: github/codeql-action/analyze@v3
        with:
          category: /language:${{ matrix.language }}
  dependencies:
    name: Dependencies
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    permissions:
      contents: read
      pull-requests: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Review
        uses: actions/dependency-review-action@v4
        with:
          fail-on-severity: high
          comment-summary-in-pr: always
  docker:
    name: Docker Security
    runs-on: ubuntu-latest
    needs: [changes]
    if: (needs.changes.outputs.docker == 'true' || github.event_name == 'workflow_dispatch')
      && github.event_name != 'pull_request'
    permissions:
      contents: read
      security-events: write
    strategy:
      matrix:
        service: [unrealircd, atheme, unrealircd-webpanel]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build for Security Scan
        uses: docker/build-push-action@v6
        with:
          context: ./${{ matrix.service == 'unrealircd-webpanel' && '.' || matrix.service }}
          file: ./${{ matrix.service == 'unrealircd-webpanel' && 'web/webpanel/Containerfile' || format('{0}/Containerfile', matrix.service) }}
          push: false
          load: true
          tags: irc-atl-chat-${{ matrix.service }}:security-scan
      - name: Scan Container Image
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'irc-atl-chat-${{ matrix.service }}:security-scan'
          format: 'sarif'
          output: 'trivy-results-${{ matrix.service }}.sarif'
          severity: 'HIGH,CRITICAL'
      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-results-${{ matrix.service }}.sarif'
          category: trivy-${{ matrix.service }}
      - name: Upload Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: trivy-results-${{ matrix.service }}
          path: trivy-results-${{ matrix.service }}.sarif
          retention-days: 30
  secrets:
    name: Secret Detection
    runs-on: ubuntu-latest
    needs: [changes]
    if: always()
    permissions:
      contents: read
      security-events: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Scan for Secrets
        uses: trufflesecurity/trufflehog@main
        with:
          path: ./
          base: main
          head: HEAD
          extra_args: --debug --only-verified
      - name: Upload Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: trufflehog-results
          path: trufflehog-results.json
          retention-days: 30
  renovate:
    name: Renovate
    runs-on: ubuntu-latest
    if: github.actor == 'renovate[bot]'
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Auto-merge Renovate PRs
        run: |
          # Auto-merge Renovate PRs that are up-to-date and pass all checks
          gh pr merge --auto --merge "$PR_URL" || echo "Auto-merge failed, manual review required"
        env:
          PR_URL: ${{ github.event.pull_request.html_url }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
