---
name: CI
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.event_name == 'pull_request' }}
env:
  REVIEWDOG_LEVEL: warning
  REVIEWDOG_REPORTER: github-pr-review
  REVIEWDOG_FILTER_MODE: file
  REVIEWDOG_FAIL_LEVEL: none
jobs:
  changes:
    name: File Detection
    runs-on: ubuntu-latest
    outputs:
      docker: ${{ steps.docker_changes.outputs.any_changed }}
      shell: ${{ steps.shell_changes.outputs.any_changed }}
      workflows: ${{ steps.workflow_changes.outputs.any_changed }}
      yaml: ${{ steps.yaml_changes.outputs.any_changed }}
      any: ${{ steps.yaml_changes.outputs.any_changed }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Check Docker
        uses: tj-actions/changed-files@v46
        id: docker_changes
        with:
          files: |
            **/Containerfile
            **/Dockerfile
            compose.yaml
            docker-compose*.yml
            .dockerignore
      - name: Check Shell
        uses: tj-actions/changed-files@v46
        id: shell_changes
        with:
          files: |
            **/*.sh
            **/*.bash
            **/*.zsh
            scripts/**
      - name: Check Workflows
        uses: tj-actions/changed-files@v46
        id: workflow_changes
        with:
          files: .github/workflows/**
      - name: Check YAML
        uses: tj-actions/changed-files@v46
        id: yaml_changes
        with:
          files: |
            **/*.yml
            **/*.yaml
            .github/**
      - name: Set Outputs
        run: |
          {
            echo "docker=${{ steps.docker_changes.outputs.any_changed }}"
            echo "shell=${{ steps.shell_changes.outputs.any_changed }}"
            echo "workflows=${{ steps.workflow_changes.outputs.any_changed }}"
            echo "yaml=${{ steps.yaml_changes.outputs.any_changed }}"
          } >> "$GITHUB_OUTPUT"

          # Check if any files changed
          if [[ "${{ steps.docker_changes.outputs.any_changed }}" == "true" ]] || \
             [[ "${{ steps.shell_changes.outputs.any_changed }}" == "true" ]] || \
             [[ "${{ steps.workflow_changes.outputs.any_changed }}" == "true" ]] || \
             [[ "${{ steps.yaml_changes.outputs.any_changed }}" == "true" ]]; then
            echo "any=true" >> "$GITHUB_OUTPUT"
          else
            echo "any=false" >> "$GITHUB_OUTPUT"
          fi
  shell:
    name: Shell
    runs-on: ubuntu-latest
    needs: [changes]
    if: needs.changes.outputs.shell == 'true'
    permissions:
      contents: read
      pull-requests: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Lint
        uses: reviewdog/action-shellcheck@v1.31
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          level: ${{ env.REVIEWDOG_LEVEL }}
          reporter: ${{ env.REVIEWDOG_REPORTER }}
          filter_mode: ${{ env.REVIEWDOG_FILTER_MODE }}
          fail_level: ${{ env.REVIEWDOG_FAIL_LEVEL }}
      - name: Format
        uses: reviewdog/action-shfmt@v1.0.4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          level: ${{ env.REVIEWDOG_LEVEL }}
          filter_mode: ${{ env.REVIEWDOG_FILTER_MODE }}
          shfmt_flags: -i 2 -ci -bn -sr -kp -w -s -p
  workflows:
    name: Workflows
    runs-on: ubuntu-latest
    needs: [changes]
    if: needs.changes.outputs.workflows == 'true'
    permissions:
      contents: read
      pull-requests: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Validate
        uses: reviewdog/action-actionlint@v1.66.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          level: ${{ env.REVIEWDOG_LEVEL }}
          reporter: ${{ env.REVIEWDOG_REPORTER }}
          filter_mode: ${{ env.REVIEWDOG_FILTER_MODE }}
          fail_level: ${{ env.REVIEWDOG_FAIL_LEVEL }}
  docker:
    name: Docker
    runs-on: ubuntu-latest
    needs: [changes]
    if: needs.changes.outputs.docker == 'true'
    permissions:
      contents: read
      pull-requests: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Lint
        uses: reviewdog/action-hadolint@v1.50.2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          level: ${{ env.REVIEWDOG_LEVEL }}
          reporter: ${{ env.REVIEWDOG_REPORTER }}
          filter_mode: ${{ env.REVIEWDOG_FILTER_MODE }}
          fail_level: ${{ env.REVIEWDOG_FAIL_LEVEL }}
          hadolint_ignore: DL3008 DL3009 DL3007
          hadolint_flags: '--format json'
  yaml:
    name: YAML
    runs-on: ubuntu-latest
    needs: [changes]
    if: needs.changes.outputs.yaml == 'true'
    permissions:
      contents: read
      pull-requests: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Lint
        uses: reviewdog/action-yamllint@v1.21.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          level: ${{ env.REVIEWDOG_LEVEL }}
          reporter: ${{ env.REVIEWDOG_REPORTER }}
          filter_mode: ${{ env.REVIEWDOG_FILTER_MODE }}
          fail_level: ${{ env.REVIEWDOG_FAIL_LEVEL }}
  compose:
    name: Docker Compose
    runs-on: ubuntu-latest
    needs: [changes]
    if: needs.changes.outputs.docker == 'true'
    permissions:
      contents: read
      pull-requests: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Validate Compose
        run: |
          echo "Validating Docker Compose configuration..."
          docker run --rm -v "$(pwd):/workspace" -w /workspace \
            docker/compose:2.20.2 config --quiet
          echo "✅ Docker Compose configuration is valid"
      - name: Test Compose Build
        run: |
          echo "Testing Docker Compose build (dry run)..."
          docker run --rm -v "$(pwd):/workspace" -w /workspace \
            docker/compose:2.20.2 config --services
          echo "✅ Docker Compose services validated"
  security:
    name: Security
    runs-on: ubuntu-latest
    needs: [changes]
    if: always()
    permissions:
      contents: read
      pull-requests: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Scan
        uses: reviewdog/action-gitleaks@v1.7
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          level: error
          reporter: ${{ env.REVIEWDOG_REPORTER }}
          filter_mode: ${{ env.REVIEWDOG_FILTER_MODE }}
          fail_level: ${{ env.REVIEWDOG_FAIL_LEVEL }}
          gitleaks_flags: --verbose
