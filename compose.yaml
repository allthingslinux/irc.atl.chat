---

name: irc.atl.chat

services:
  ircd:
    build:
      context: .
      dockerfile: Containerfile
      target: runtime
      args:
        UNREALIRCD_VERSION: "6.1.10"
        ATHEME_VERSION: "7.2.12"
    container_name: ircd
    volumes:
      - ircd_data:/usr/local/unrealircd/data
      - ircd_logs:/usr/local/unrealircd/logs
      - ./unrealircd/conf:/usr/local/unrealircd/conf:ro
      - ircd_modules:/usr/local/unrealircd/modules
      - ircd_contrib:/usr/local/unrealircd/contrib
      - .runtime/certs:/etc/letsencrypt:ro
    environment:
      - TZ=UTC
    ports:
      - '6667:6667'  # Standard IRC port
      - '6697:6697'  # IRC over SSL/TLS
      - '8600'  # JSON-RPC API for webpanel
    networks:
      - irc_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "pgrep", "-f", "unrealircd"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  atheme:
    build:
      context: .
      dockerfile: Containerfile
      target: runtime
      args:
        UNREALIRCD_VERSION: "6.1.10"
        ATHEME_VERSION: "7.2.12"
    container_name: atheme
    depends_on:
      ircd:
        condition: service_healthy
    volumes:
      - atheme_data:/usr/local/atheme/data
      - atheme_logs:/usr/local/atheme/logs
      - ./services/atheme:/usr/local/atheme/etc:ro
    environment:
      - TZ=UTC
      - ATHEME_CONF=/usr/local/atheme/etc/atheme.conf
      - ATHEME_DATA=/usr/local/atheme/data
    networks:
      - irc_network
    command: ["/usr/local/bin/start-services", "start"]
    restart: unless-stopped

  webpanel:
    build:
      context: .
      dockerfile: web/webpanel/Containerfile
    container_name: webpanel
    depends_on:
      ircd:
        condition: service_healthy
    volumes:
      - webpanel_data:/var/www/html/unrealircd-webpanel/data
      - webpanel_config:/var/www/html/unrealircd-webpanel/config
    environment:
      - TZ=UTC
      - UNREALIRCD_HOST=ircd
      - UNREALIRCD_PORT=8600
      - UNREALIRCD_RPC_USER=adminpanel
      - UNREALIRCD_RPC_PASSWORD=webpanel_password_2024
    ports:
      - '8080:80'  # Web interface
    networks:
      - irc_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/unrealircd-webpanel/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  gamja:
    build:
      context: .
      dockerfile: web/gamja/Containerfile
    container_name: gamja
    depends_on:
      ircd:
        condition: service_healthy
    environment:
      - TZ=UTC
    ports:
      - '8081:80'
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/gamja/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  thelounge:
    image: thelounge/thelounge:4@sha256:c2aa0916203b298ffaf3a36c4eb60ef73c1006448d430e218d37840472e84e50
    container_name: thelounge
    depends_on:
      ircd:
        condition: service_healthy
    volumes:
      - /opt/thelounge:/var/opt/thelounge  # bind lounge config from the host's file system
    ports:
      - '9000:9000'
    restart: unless-stopped

  irc-certbot:
    image: certbot/dns-cloudflare:latest
    container_name: irc-certbot
    hostname: irc-certbot
    env_file:
      - path: .env
        required: true
    volumes:
      - .runtime/certs:/etc/letsencrypt
      - ./cloudflare-credentials.ini:/etc/letsencrypt/cloudflare-credentials.ini:ro
    command: >
      certonly
      --dns-cloudflare
      --dns-cloudflare-credentials=/etc/letsencrypt/cloudflare-credentials.ini
      --dns-cloudflare-propagation-seconds=60
      --email ${LETSENCRYPT_EMAIL:-admin@example.com}
      --agree-tos
      --no-eff-email
      --expand
      --non-interactive
      -d ${PROSODY_DOMAIN:-example.com}
      -d "*.${PROSODY_DOMAIN:-example.com}"
    networks:
      - irc_network

  irc-certbot-renew:
    image: certbot/dns-cloudflare:latest
    container_name: irc-certbot-renew
    hostname: irc-certbot-renew
    env_file:
      - path: .env
        required: true
    volumes:
      - .runtime/certs:/etc/letsencrypt
      - ./cloudflare-credentials.ini:/etc/letsencrypt/cloudflare-credentials.ini:ro
    command: renew --quiet
    networks:
      - irc_network

  irc-cert-monitor:
    image: alpine:latest
    container_name: irc-cert-monitor
    hostname: irc-cert-monitor
    env_file:
      - path: .env
        required: true
    volumes:
      - ./.runtime:/app/.runtime
      - ./scripts:/app/scripts:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    working_dir: /app
    command: >
      sh -c "
        apk add --no-cache bash curl jq openssl docker-cli &&
        while true; do
          ./scripts/certificate-monitor.sh monitor
          sleep ${CERT_CHECK_INTERVAL:-3600}
        done
      "
    networks:
      - irc_network
    restart: unless-stopped
    depends_on:
      - ircd

networks:
  irc_network:
    driver: bridge

volumes:
  ircd_data:
    driver: local
  ircd_logs:
    driver: local
  ircd_modules:
    driver: local
  ircd_contrib:
    driver: local
  atheme_data:
    driver: local
  atheme_logs:
    driver: local
  webpanel_data:
    driver: local
  webpanel_config:
    driver: local
  .runtime/certs:
    driver: local
