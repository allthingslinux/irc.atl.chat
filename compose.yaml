---

name: irc.atl.chat

services:
  unrealircd:
    build:
      context: .
      dockerfile: Containerfile
      target: runtime
      args:
        UNREALIRCD_VERSION: "6.1.10"
        ATHEME_VERSION: "7.2.12"
    container_name: unrealircd
    hostname: unrealircd
    restart: unless-stopped
    init: true
    command: ["/usr/local/bin/unrealircd", "-F"]

    # Volume mounts
    volumes:
      - ./unrealircd/conf:/usr/local/unrealircd/conf:ro
      - ./scripts:/opt/irc/scripts:ro
      - ./data/unrealircd:/usr/local/unrealircd/data
      - ./logs/unrealircd:/usr/local/unrealircd/logs
      
    user: 1001:1001

    # Environment configuration
    env_file:
      - path: .env
        required: false
    environment:
      - TZ=UTC

    # Port mappings
    ports:
      - '${IRC_PORT:-6667}:6667'  # Standard IRC port
      - '${IRC_TLS_PORT:-6697}:6697'  # IRC over SSL/TLS
      - '${IRC_SERVER_PORT:-6900}:6900'  # Server-to-server TLS
      - '${IRC_RPC_PORT:-8600}:8600'  # JSON-RPC API

    # Health monitoring
    healthcheck:
      test: ['CMD', '/opt/irc/scripts/health-check.sh']
      interval: 30s
      timeout: 20s
      retries: 3
      start_period: 30s

    # Network configuration
    networks:
      - irc_network

    # Graceful shutdown
    stop_grace_period: 60s


  atheme:
    build:
      context: .
      dockerfile: Containerfile
      target: runtime
      args:
        UNREALIRCD_VERSION: "6.1.10"
        ATHEME_VERSION: "7.2.12"
    container_name: atheme
    hostname: atheme
    depends_on:
      unrealircd:
        condition: service_healthy
    volumes:
      - ./data/atheme:/usr/local/atheme/data
      - ./logs/atheme:/usr/local/atheme/logs
      - ./services/atheme:/usr/local/atheme/etc:ro
    environment:
      - TZ=UTC
      - ATHEME_CONF=/usr/local/atheme/etc/atheme.conf
      - ATHEME_DATA=/usr/local/atheme/data
    networks:
      - irc_network
    command: ["/usr/local/bin/atheme-services", "-c", "/usr/local/atheme/etc/atheme.conf"]
    restart: unless-stopped

  unrealircd-webpanel:
    build:
      context: .
      dockerfile: web/webpanel/Containerfile
    container_name: unrealircd-webpanel
    hostname: unrealircd-webpanel
    depends_on:
      unrealircd:
        condition: service_healthy
    volumes:
      - ./data/webpanel:/var/www/html/unrealircd-webpanel/data
      - ./config/webpanel:/var/www/html/unrealircd-webpanel/config
    env_file:
      - path: .env
        required: false
    environment:
      - TZ=UTC
      - UNREALIRCD_HOST=unrealircd
      - UNREALIRCD_PORT=${IRC_RPC_PORT:-8600}
    ports:
      - '8080:80'
    networks:
      - irc_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # ============================================================================
  # SSL MONITOR (Docker-based - Runs automatically, don't manually control!)
  # ============================================================================
  ssl-monitor:
    image: alpine:latest
    container_name: ssl-monitor
    restart: unless-stopped

    # Get environment variables from .env file
    env_file:
      - .env

    # Simple environment
    environment:
      - TZ=UTC

    # Mount scripts and certificates
    volumes:
      - ./scripts:/scripts:ro
      - ./unrealircd/conf/tls:/tls
      - ./data/letsencrypt:/letsencrypt
      - ./cloudflare-credentials.ini:/cloudflare-credentials.ini:ro

    # Simple monitoring loop
    command: >
      sh -c "
        apk add --no-cache openssl curl &&
        chmod +x /scripts/ssl-manager.sh &&
        echo 'SSL Monitor started - checking certificates daily' &&
        while true; do
          echo \"[$$(date)] Checking SSL certificates...\";
          /scripts/ssl-manager.sh check >> /tmp/ssl-monitor.log 2>&1;

          # Check for renewal at 2 AM
          if [ \"$$(date +%H)\" = \"02\" ]; then
            echo \"[$$(date)] Checking for certificate renewal...\";
            /scripts/ssl-manager.sh renew >> /tmp/ssl-monitor.log 2>&1;
          fi;

          echo \"[$$(date)] SSL check completed. Next check in 4 hours.\";
          sleep 14400;
        done
      "

    # Network access
    networks:
      - irc_network

  # gamja:
  #   build:
  #     context: .
  #     dockerfile: web/gamja/Containerfile
  #   container_name: gamja
  #   hostname: gamja
  #   depends_on:
  #     unrealircd:
  #       condition: service_healthy
  #   environment:
  #     - TZ=UTC
  #   volumes:
  #     - ./web/gamja:/var/www/html/gamja:ro
  #   ports:
  #     - '8081:80'
  #   networks:
  #     - irc_network
  #   restart: unless-stopped
  #   healthcheck:
  #     test: ["CMD", "curl", "-f", "http://localhost/gamja/"]
  #     interval: 30s
  #     timeout: 10s
  #     retries: 3
  #     start_period: 60s

  # thelounge:
  #   image: thelounge/thelounge:4@sha256:c2aa0916203b298ffaf3a36c4eb60ef73c1006448d430e218d37840472e84e50
  #   container_name: thelounge
  #   hostname: thelounge
  #   depends_on:
  #     unrealircd:
  #       condition: service_healthy
  #   volumes:
  #     - ./data/thelounge:/var/opt/thelounge
  #   networks:
  #     - irc_network
  #   ports:
  #     - '9000:9000'
  #   restart: unless-stopped

networks:
  irc_network:
    driver: bridge

  
