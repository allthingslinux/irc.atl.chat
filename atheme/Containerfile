# ================================================================================
# Atheme Services - IRC Services Daemon
# ================================================================================
FROM alpine:3.20 AS builder

# Build dependencies
RUN apk add --no-cache \
    build-base \
    pkgconf \
    openssl-dev \
    libidn-dev \
    git

# Download and build Atheme
ARG ATHEME_VERSION="7.2.12"
WORKDIR /usr/src

# Checkout from Git - we need to manually bump the libmowgli snapshot to fix compilation against musl
RUN git clone https://github.com/atheme/atheme -b v${ATHEME_VERSION} --depth=1 atheme-src --recursive && \
    cd atheme-src/libmowgli-2 && \
    git pull origin master

# Alpine build fix
RUN sed -i "s/@MKDIR_P@/mkdir -p/g" /usr/src/atheme-src/modules/contrib/buildsys.mk.in

# Configure and build with libidn support for SCRAM-SHA
RUN cd /usr/src/atheme-src && \
    ./configure --prefix=/usr/local/atheme --enable-contrib --with-modulesdir=/usr/local/atheme/modules --with-libidn && \
    make -j$(nproc) && \
    make install

# ================================================================================
# Runtime stage
# ================================================================================
FROM alpine:3.20

# Runtime dependencies
RUN apk add --no-cache \
    openssl \
    libidn \
    ca-certificates \
    su-exec \
    tini

# Runtime arguments
ARG UID=0
ARG GID=0

# Create atheme user (skip if running as root)
RUN if [ "${UID}" != "0" ]; then \
    addgroup -g ${GID} -S atheme && \
    adduser -u ${UID} -D -S -G atheme atheme; \
    fi

# Copy from builder
COPY --from=builder /usr/local/atheme /usr/local/atheme

# Create directory structure
RUN mkdir -p /usr/local/atheme/etc \
    /usr/local/atheme/data \
    /usr/local/atheme/logs && \
    if [ "${UID}" != "0" ]; then \
    chown -R atheme:atheme /usr/local/atheme; \
    fi

# Copy entrypoint
COPY --chown=root:root docker-entrypoint.sh /usr/local/bin/
RUN chmod +x /usr/local/bin/docker-entrypoint.sh

# Use tini as init system - entrypoint will be overridden by compose.yaml
ENTRYPOINT ["/sbin/tini", "--", "/usr/local/bin/docker-entrypoint.sh"]
